<div class="container mt-5">
  <h1>Image Gallery with Pagination</h1>
  <p>By default 10 images are displayed per page, you may customize that.</p>
  <label for="itemsPerPage">Images per page:</label>
  <input type="number" id="itemsPerPage" value="10" min="1" />
  <button class="btn btn-primary" id="loadGallery">Load Gallery</button>
  <div id="imageContainer"></div>
  <div id="pagination" class="pagination">
    <button id="prevBtn">Previous</button>
    <span id="pageInfo"></span>
    <button id="nextBtn">Next</button>
  </div>
</div>

<script>
 let currentPage = 1;
let totalPages = 1;

document.addEventListener("DOMContentLoaded", function () {
  const itemsPerPageInput = document.getElementById("itemsPerPage");
  const loadGalleryButton = document.getElementById("loadGallery");

  loadGalleryButton.addEventListener("click", function () {
    const itemsPerPage = parseInt(itemsPerPageInput.value, 10);
    fetchPage(1, itemsPerPage);
  });

  function fetchPage(pageIndex, itemsPerPage) {
    fetch(`/fetch/fetch-all/pages/${pageIndex}?itemsPerPage=${itemsPerPage}`)
      .then((response) => {
        if (!response.ok) {
          throw new Error(`HTTP error! Status: ${response.status}`);
        }
        return response.json();
      })
      .then((data) => {
        console.log(data);

        const imageContainer = document.getElementById('imageContainer');
        imageContainer.innerHTML = ''; // Clear any existing content

          if (Array.isArray(data.files) && data.files.length > 0) {
            data.files.forEach((image) => {
              if (image.imageBuffer) {
                // Create an img element
                const imgElement = document.createElement('img');
                imgElement.src = `data:${image.contentType};base64,${image.imageBuffer}`;
                imgElement.alt = image.filename;

                // Append the img element to the container
                imageContainer.appendChild(imgElement);
              }
          });
        } else {
          imageContainer.innerHTML = '<p>No images found.</p>';
        }
        // Update pagination info and buttons
        currentPage = data.page;
        totalPages = data.totalPages;

        const pageInfo = document.getElementById('pageInfo');
        pageInfo.textContent = `Page ${currentPage} of ${totalPages}`;
        // Update pagination info and buttons
        document.getElementById('prevBtn').disabled = currentPage <= 1;
        document.getElementById('nextBtn').disabled = currentPage >= totalPages;
      })
      .catch((error) => console.error("Error fetching page:", error));
  }

  function prevPage() {
    if (currentPage > 1) {
      fetchPage(currentPage - 1, parseInt(document.getElementById("itemsPerPage").value, 10));
    }
  }

  function nextPage() {
    if (currentPage < totalPages) {
      fetchPage(currentPage + 1, parseInt(document.getElementById("itemsPerPage").value, 10));
    }
  }

  document.getElementById('prevBtn').addEventListener('click', prevPage);
  document.getElementById('nextBtn').addEventListener('click', nextPage);

  // Initial page load
  fetchPage(currentPage, parseInt(document.getElementById("itemsPerPage").value, 10));
});
</script>